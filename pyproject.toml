[tool.poetry]
name = "mini-llm"
version = "1.0.0"
description = ""
authors = ["notoxicpeople"]
readme = "README.md"
packages = [    
    { include = "config", from = "src" },
    { include = "dataset", from = "src" },
    { include = "eval", from = "src" },
    { include = "model", from = "src" },
    { include = "singleton", from = "src" },
    { include = "train", from = "src" },
    { include = "util", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.10"
torch = "^2.1.0"
datasets = "^2.14.5"
transformers = "^4.34.1"
pytest = "^7.4.2"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"
types-requests = "^2.31.0.10"
accelerate = "^0.24.1"
scikit-learn = "^1.3.2"
human-eval = "^1.0.3"
evaluate = "^0.4.1"
tqdm = "^4.66.1"
einops = "^0.7.0"
bitsandbytes = "^0.41.3"
matplotlib = "^3.8.2"
tensorboard = "^2.15.1"
autoflake = "^2.2.1"

[tool.poetry.group.dev.dependencies]
mypy = "^1.6.1"
pyproject-flake8 = "^6.1.0"
black = "^23.10.0"
isort = "^5.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ['py39']
line-length = 200

[tool.isort]
line_length = 200
profile = "black"

[tool.flake8]
max-line-length = 200
max-complexity = 18
ignore = "ANN101,ANN204,W503,E501,E116,E266,E722,"
exclude = "__pycache__,.mypy_cache,.pytest_cache,.venv,old,build,dist"

[tool.mypy]
python_version = "3.10"
no_strict_optional = true
ignore_missing_imports = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests",]
filterwarnings = ["ignore::DeprecationWarning",]

[tool.coverage.run]
omit = ["tests/*", "main.py"]

